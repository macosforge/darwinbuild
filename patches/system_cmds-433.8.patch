diff -ru ../system_cmds-433.8.orig/arch.tproj/Makefile ./arch.tproj/Makefile
--- ../system_cmds-433.8.orig/arch.tproj/Makefile	2009-07-10 19:54:16.000000000 -0700
+++ ./arch.tproj/Makefile	2009-07-10 21:21:45.000000000 -0700
@@ -1,18 +1,16 @@
 Project = arch
 Install_Dir = /usr/bin
 
-MFILES = arch.m
-Extra_Frameworks = -framework Foundation
-
 MANPAGES = arch.1 machine.1
 
-Extra_CC_Flags = -DARCH_PROG=\"arch\" -DMACHINE_PROG=\"machine\"
-
 include $(MAKEFILEPATH)/CoreOS/ReleaseControl/BSDCommon.make
 
 HELPERDIR = /AppleInternal/Developer/Tools
 after_install:
-	@-$(RM) -f $(DSTROOT)$(INSTALLDIR)/machine
+	echo "#!/bin/sh" > $(DSTROOT)$(Install_Dir)/arch
+	echo "uname -m" >> $(DSTROOT)$(Install_Dir)/arch
+	/bin/chmod a+x $(DSTROOT)$(Install_Dir)/arch
+	@-$(RM) -f $(DSTROOT)$(Install_Dir)/machine
 	$(LN) -h $(DSTROOT)$(Install_Dir)/arch $(DSTROOT)$(Install_Dir)/machine
 	$(INSTALL_DIRECTORY) -d $(DSTROOT)$(HELPERDIR)
 	$(INSTALL_SCRIPT) arch_helper.pl $(DSTROOT)$(HELPERDIR)
diff -ru ../system_cmds-433.8.orig/iostat.tproj/iostat.c ./iostat.tproj/iostat.c
--- ../system_cmds-433.8.orig/iostat.tproj/iostat.c	2009-07-10 19:54:16.000000000 -0700
+++ ./iostat.tproj/iostat.c	2009-07-10 21:36:53.000000000 -0700
@@ -169,7 +169,7 @@
 
 static int num_devices;
 static int maxshowdevs;
-static int dflag = 0, Iflag = 0, Cflag = 0, Tflag = 0, oflag = 0, Uflag = 0, Kflag = 0;
+static int dflag = 0, Iflag = 0, Cflag = 0, Tflag = 0, oflag = 0, Uflag = 0, Kflag = 0, kNilOptions = 0;
 static volatile sig_atomic_t phdr_flag = 0;
 static IONotificationPortRef notifyPort;
 
diff -ru ../system_cmds-433.8.orig/reboot.tproj/Makefile ./reboot.tproj/Makefile
--- ../system_cmds-433.8.orig/reboot.tproj/Makefile	2009-07-10 19:54:16.000000000 -0700
+++ ./reboot.tproj/Makefile	2009-07-15 22:44:41.000000000 -0700
@@ -5,9 +5,6 @@
 MANPAGES = reboot.8
 
 Embedded = $(shell tconf --test TARGET_OS_EMBEDDED)
-ifeq ($(Embedded),NO)
-USERDEFS = kextmanager.defs
-endif
 
 include $(MAKEFILEPATH)/CoreOS/ReleaseControl/BSDCommon.make
 
diff -ru ../system_cmds-433.8.orig/reboot.tproj/reboot.c ./reboot.tproj/reboot.c
--- ../system_cmds-433.8.orig/reboot.tproj/reboot.c	2009-07-10 19:54:16.000000000 -0700
+++ ./reboot.tproj/reboot.c	2009-07-15 22:47:02.000000000 -0700
@@ -59,10 +59,6 @@
 
 #ifdef __APPLE__
 #include <TargetConditionals.h>
-#if !TARGET_OS_EMBEDDED
-#include "kextmanager.h"
-#include <IOKit/kext/kextmanager_types.h>
-#endif
 #include <mach/mach_port.h>		// allocate
 #include <mach/mach.h>			// task_self, etc
 #include <servers/bootstrap.h>	// bootstrap
@@ -71,9 +67,6 @@
 
 void usage(void);
 u_int get_pageins(void);
-#if defined(__APPLE__) && !TARGET_OS_EMBEDDED
-int reserve_reboot(void);
-#endif
 
 int dohalt;
 
@@ -149,12 +142,6 @@
 		err(1, NULL);
 	}
 
-#if defined(__APPLE__) && !TARGET_OS_EMBEDDED
-	if (!lflag) {	// shutdown(8) has already checked w/kextd
-		if ((errno = reserve_reboot()) && !qflag)
-			err(1, "couldn't lock for reboot");
-	}
-#endif
 
 	if (qflag) {
 		#ifdef __APPLE__
@@ -291,62 +278,3 @@
 	return pageins;
 }
 
-#if defined(__APPLE__) && !TARGET_OS_EMBEDDED
-// XX this routine is also in shutdown.tproj; it would be nice to share
-
-#define WAITFORLOCK 1
-/*
- * contact kextd to lock for reboot
- */
-int
-reserve_reboot()
-{
-	int rval = ELAST + 1;
-	kern_return_t macherr = KERN_FAILURE;
-	mach_port_t kxport, tport = MACH_PORT_NULL, myport = MACH_PORT_NULL;
-	int busyStatus = ELAST + 1;
-	mountpoint_t busyVol;
-
-	macherr = bootstrap_look_up(bootstrap_port, KEXTD_SERVER_NAME, &kxport);
-	if (macherr)  goto finish;
-
-	// allocate a port to pass to kextd (in case we die)
-	tport = mach_task_self();
-	if (tport == MACH_PORT_NULL)  goto finish;
-	macherr = mach_port_allocate(tport, MACH_PORT_RIGHT_RECEIVE, &myport);
-	if (macherr)  goto finish;
-
-	// try to lock for reboot
-	macherr = kextmanager_lock_reboot(kxport, myport, !WAITFORLOCK, busyVol,
-                                      &busyStatus);
-	if (macherr)  goto finish;
-
-	if (busyStatus == EBUSY) {
-		warnx("%s is busy updating; waiting for lock", busyVol);
-		macherr = kextmanager_lock_reboot(kxport, myport, WAITFORLOCK,
-										  busyVol, &busyStatus);
-		if (macherr)	goto finish;
-	}
-
-	if (busyStatus == EALREADY) {
-		// reboot already in progress
-		rval = 0;
-	} else {
-		rval = busyStatus;
-	}
-
-finish:
-	// in general, we want to err on the side of allowing the reboot
-	if (macherr) {
-		if (macherr != BOOTSTRAP_UNKNOWN_SERVICE)
-			warnx("WARNING: couldn't lock kext manager for reboot: %s",
-					mach_error_string(macherr));
-		rval = 0;
-	} 
-	// unless we got the lock, clean up our port
-	if (busyStatus != 0 && myport != MACH_PORT_NULL)
-		mach_port_mod_refs(tport, myport, MACH_PORT_RIGHT_RECEIVE, -1);
-
-	return rval;
-}
-#endif
diff -ru ../system_cmds-433.8.orig/sadc.tproj/sadc.c ./sadc.tproj/sadc.c
--- ../system_cmds-433.8.orig/sadc.tproj/sadc.c	2009-07-10 19:54:16.000000000 -0700
+++ ./sadc.tproj/sadc.c	2009-07-15 22:52:37.000000000 -0700
@@ -49,6 +49,7 @@
 
 FILE *data_fp = (FILE *)0;	/* raw data output file pointer */
 
+int kNilOptions = 0;
 
 #define REVISION_HISTORY_DATE 20030718
 
diff -ru ../system_cmds-433.8.orig/shutdown.tproj/Makefile ./shutdown.tproj/Makefile
--- ../system_cmds-433.8.orig/shutdown.tproj/Makefile	2009-07-10 19:54:16.000000000 -0700
+++ ./shutdown.tproj/Makefile	2009-07-15 23:08:02.000000000 -0700
@@ -3,7 +3,6 @@
 
 HFILES = pathnames.h
 CFILES = shutdown.c
-USERDEFS = kextmanager.defs
 MANPAGES = shutdown.8
 
 Extra_Frameworks = -framework IOKit
diff -ru ../system_cmds-433.8.orig/shutdown.tproj/shutdown.c ./shutdown.tproj/shutdown.c
--- ../system_cmds-433.8.orig/shutdown.tproj/shutdown.c	2009-07-10 19:54:16.000000000 -0700
+++ ./shutdown.tproj/shutdown.c	2009-07-15 22:59:47.000000000 -0700
@@ -67,8 +67,6 @@
 #include <bsm/libbsm.h>
 #include <bsm/audit_uevents.h>
 
-#include "kextmanager.h"
-#include <IOKit/kext/kextmanager_types.h>
 #include <IOKit/pwr_mgt/IOPMLib.h>
 #include <mach/mach_port.h>		// allocate
 #include <mach/mach.h>			// task_self, etc
@@ -134,7 +132,6 @@
 void usage(const char *);
 #ifdef __APPLE__
 int audit_shutdown(int);
-int reserve_reboot(void);
 #endif
 
 extern const char **environ;
@@ -406,12 +403,7 @@
 die_you_gravy_sucking_pig_dog()
 #endif
 {
-#ifndef __APPLE__
 	char *empty_environ[] = { NULL };
-#else
-	if ((errno = reserve_reboot()))
-		err(1, "couldn't lock for reboot");
-#endif
 
 	syslog(LOG_NOTICE, "%s%s by %s: %s",
 #ifndef __APPLE__
@@ -696,64 +688,5 @@
 	}
 	return 1;
 }
-
-
-// XX copied from reboot.tproj/reboot.c; it would be nice to share the code
-
-#define WAITFORLOCK 1
-/*
- * contact kextd to lock for reboot
- */
-int
-reserve_reboot()
-{
-    int rval = ELAST + 1;
-    kern_return_t macherr = KERN_FAILURE;
-    mach_port_t kxport, tport = MACH_PORT_NULL, myport = MACH_PORT_NULL;
-    int busyStatus = ELAST + 1;
-    mountpoint_t busyVol;
-
-    macherr = bootstrap_look_up(bootstrap_port, KEXTD_SERVER_NAME, &kxport);
-    if (macherr)  goto finish;
-
-    // allocate a port to pass to kextd (in case we die)
-    tport = mach_task_self();
-    if (tport == MACH_PORT_NULL)  goto finish;
-    macherr = mach_port_allocate(tport, MACH_PORT_RIGHT_RECEIVE, &myport);
-    if (macherr)  goto finish;
-
-    // try to lock for reboot
-    macherr = kextmanager_lock_reboot(kxport, myport, !WAITFORLOCK, busyVol,
-                                      &busyStatus);
-    if (macherr)  goto finish;
-
-    if (busyStatus == EBUSY) {
-        warnx("%s is busy updating; waiting for lock", busyVol);
-        macherr = kextmanager_lock_reboot(kxport, myport, WAITFORLOCK,
-                                          busyVol, &busyStatus);
-        if (macherr)    goto finish;
-    }
-
-    if (busyStatus == EALREADY) {
-        // reboot already in progress
-        rval = 0;
-    } else {
-        rval = busyStatus;
-    }
-
-finish:
-    // in general, we want to err on the side of allowing the reboot
-    if (macherr) {
-        if (macherr != BOOTSTRAP_UNKNOWN_SERVICE)
-            warnx("WARNING: couldn't lock kext manager for reboot: %s",
-                    mach_error_string(macherr));
-        rval = 0;
-    }
-    // unless we got the lock, clean up our port
-    if (busyStatus != 0 && myport != MACH_PORT_NULL)
-        mach_port_mod_refs(tport, myport, MACH_PORT_RIGHT_RECEIVE, -1);
-
-    return rval;
-}
-#endif /* __APPLE__ */
+#endif
 
diff -ru ../system_cmds-433.8.orig/update.tproj/update.c ./update.tproj/update.c
--- ../system_cmds-433.8.orig/update.tproj/update.c	2009-07-10 19:54:16.000000000 -0700
+++ ./update.tproj/update.c	2009-07-15 22:49:55.000000000 -0700
@@ -20,7 +20,6 @@
  * 
  * @APPLE_LICENSE_HEADER_END@
  */
-#include <sandbox.h>
 #include <stdio.h>
 #include <unistd.h>
 
@@ -29,11 +28,6 @@
 {
 	const char* progname = "update";
 	char* errmsg;
-	int res = sandbox_init(progname, SANDBOX_NAMED, &errmsg);
-	if (res) {
-		fprintf(stderr, "%s: sandbox_init: %s\n", progname, errmsg);
-		sandbox_free_error(errmsg);
-	}
 
 	for (;;) {
 		sleep(30);
