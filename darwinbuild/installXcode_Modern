#!/bin/sh
#
# Copyright (c) 2017 William Kent. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 3.  Neither the name of Apple Computer, Inc. ("Apple") nor the names of
#     its contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY ITS CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

do_ditto () {
    local path=$1
    echo ditto $path
    mkdir -p $BUILDROOT/$path
    ditto "$path" "$BUILDROOT/$path" || exit 1
}

HOST_DARWIN_VERSION=$(sw_vers -productVersion)
BUILDROOT="$1"
mkdir -p "$BUILDROOT"

XCODE_PATH=$(xcode-select --print-path)
if [[ "$XCODE_PATH" =~ Contents/Developer$ ]]; then
    # Get the path to the root of the Xcode.app bundle.
    XCODE_PATH=$(dirname $(dirname $XCODE_PATH))
fi

do_ditto $XCODE_PATH/Contents/Frameworks
do_ditto $XCODE_PATH/Contents/SharedFrameworks
do_ditto $XCODE_PATH/Contents/OtherFrameworks
do_ditto $XCODE_PATH/Contents/PlugIns
do_ditto $XCODE_PATH/Contents/XPCServices

do_ditto $XCODE_PATH/Contents/Developer/Library
do_ditto $XCODE_PATH/Contents/Developer/Makefiles
do_ditto $XCODE_PATH/Contents/Developer/Toolchains
do_ditto $XCODE_PATH/Contents/Developer/Tools
do_ditto $XCODE_PATH/Contents/Developer/usr

do_ditto $XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform
ditto $XCODE_PATH/Contents/Info.plist $BUILDROOT$XCODE_PATH/Contents
ditto $XCODE_PATH/Contents/version.plist $BUILDROOT$XCODE_PATH/Contents

mkdir -p $BUILDROOT/System/Library/CoreServices
ditto /System/Library/CoreServices/SystemVersion.plist $BUILDROOT/System/Library/CoreServices

# Create extra directories required by the Xcode tools.
# While not strictly part of Xcode, without them the tools will crash.
mkdir -p $BUILDROOT/Users/$(whoami)
mkdir -p $BUILDROOT/$(getconf DARWIN_USER_DIR)
mkdir -p $BUILDROOT/$(getconf DARWIN_USER_TEMP_DIR)
mkdir -p $BUILDROOT/$(getconf DARWIN_USER_CACHE_DIR)

if [[ "$HOST_DARWIN_VERSION" =~ ^10.14 ]]; then
    mkdir -p $BUILDROOT/private/var/db
    ln -s $XCODE_PATH/Contents/Developer $BUILDROOT/private/var/db/xcode_select_link

    # macOS versions >= 10.13 do not allow processes with entitlements
    # to run inside a chroot. Therefore, I must strip the entitlements
    # and re-sign xcodebuild. Hopefully, this won't break anything.
    cat <<EOF > $BUILDROOT/private/tmp/empty.entitlements
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
</dict>
</plist>
EOF

    codesign -s - -f --entitlements $BUILDROOT/private/tmp/empty.entitlements $BUILDROOT$XCODE_PATH/Contents/Developer/usr/bin/xcodebuild
elif [[ "$HOST_DARWIN_VERSION" =~ ^10.13 ]]; then
    rm $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk
    mv $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk

    mkdir -p $BUILDROOT/private/var/db
    ln -s $XCODE_PATH/Contents/Developer $BUILDROOT/private/var/db/xcode_select_link

    if [ -x /usr/local/share/darwinbuild/xcbuild ]; then
        # If it is available, overwrite Apple's xcodebuild with xcbuild.
        # This helps avoid the issue described in the 'else' block below.
        cp -f /usr/local/share/darwinbuild/xcbuild $BUILDROOT$XCODE_PATH/Contents/Developer/usr/bin/xcodebuild
    else
        # High Sierra does not allow processes with entitlements to run inside a chroot.
        # Therefore, I must strip the entitlements and re-sign xcodebuild.
        # Hopefully, this won't break anything.
        cat <<EOF > $BUILDROOT/private/tmp/empty.entitlements
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
</dict>
</plist>
EOF

        codesign -s - -f --entitlements $BUILDROOT/private/tmp/empty.entitlements $BUILDROOT$XCODE_PATH/Contents/Developer/usr/bin/xcodebuild
    fi
elif [[ "$HOST_DARWIN_VERSION" =~ ^10.12 ]]; then
    rm $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk
    mv $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk $BUILDROOT$XCODE_PATH/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk
fi
